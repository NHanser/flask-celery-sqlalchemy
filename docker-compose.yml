version: "3.7"
services:
#  postgres:
#    container_name: webapp-postgres
#    image: postgres:10
#    environment:
#      - POSTGRES_USER=testusr
#      - POSTGRES_PASSWORD=password
#      - POSTGRES_DB=testdb
#    volumes:
#      - myvol:/var/lib/postgresql/data
#    ports:
#      - "5433:5432"
  app:
    container_name: webapp-template-flask
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - APP_RUN_ENV=DOCKER
      - MODE=Prod
    ports:
      - 5000:5000
    volumes:
      - .:/app
    depends_on:
#      - postgres
      - redis
      - celery-worker
    entrypoint:
      - /myapp/gunicorn.sh
  redis:
    image: redis:6-alpine
    container_name: webapp-template-redis
    ports:
      - 6390:6379
  celery-worker:
    container_name: webapp-template-celery-worker
    command: celery -A app.celeryapp.celery_worker.celery -b redis://redis:6379 --result-backend redis://redis:6379 worker --concurrency=2  --loglevel=info --logfile=logs/celery.log  -B
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - APP_RUN_ENV=DOCKER
      - MODE=Prod
    depends_on:
      - redis
    volumes:
      - ./logs:/myapp/logs
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: webapp-template-celery-dashboard
    command: celery --broker=redis://redis:6379/0 flower --port=5555 
    ports:
      - 5556:5555
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=app.settings.Development
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - APP_RUN_ENV=DOCKER
      - MODE=Prod
    depends_on:
      - app
      - redis
      - celery-worker

volumes:
  myvol:
    name: myvol
